/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { CollectModule, CollectModuleInterface } from "../CollectModule";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "franchiseId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ipAssetId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collector",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "collectData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "collectNFTInitData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "collectNFTData",
            type: "bytes",
          },
        ],
        internalType: "struct CollectParams",
        name: "collectParams",
        type: "tuple",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "address",
        name: "collectNFT",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collectNFTId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class CollectModule__factory {
  static readonly abi = _abi;
  static createInterface(): CollectModuleInterface {
    return new utils.Interface(_abi) as CollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectModule {
    return new Contract(address, _abi, signerOrProvider) as CollectModule;
  }
}
